name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Rustfmt nightly
        run: |
          rustup component add rustfmt --toolchain nightly
      - uses: pre-commit/action@v3.0.1

  cargo-test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        os: [windows-latest] # [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust toolchain
        run: rustup update
      - name: Run Cargo Tests
        run: cargo test

  build-docs:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: uv sync --group docs --no-install-project
      - name: Build docs
        run: uv run --no-project mkdocs build

  benchmarks:
    name: Run benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
      - name: Generate resources
        run: python crates/karva_benchmark/resources/generate.py
      - uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          cache-target: release
          bins: cargo-codspeed
      - name: "Build benchmarks"
        run: cargo codspeed build --features codspeed -p karva_benchmark
      - name: Run benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          token: ${{ secrets.CODSPEED_TOKEN }}
          run: cargo codspeed run

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          cache-target: release
          bins: cargo-tarpaulin
      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --out Xml
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  python-test:
    name: python${{ matrix.python-version }}-${{ matrix.os }}-${{ matrix.folder }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.13"]
        folder: ["tests/integration", "tests/example"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup integration test environment
        run: |
          cd ${{ matrix.folder }}
          uv venv
          uv pip install -e ../../
          uv sync
      - name: Run karva test
        run: |
          cd ${{ matrix.folder }}
          uv run karva test -v
