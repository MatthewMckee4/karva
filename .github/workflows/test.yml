name: Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.1

  cargo-test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run Cargo Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features

  cargo-build:
    runs-on: ${{ (matrix.os == 'linux' && 'ubuntu') || matrix.os }}-latest

    strategy:
      fail-fast: false
      matrix:
        os: [linux, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          # manylinux for various platforms, plus x86_64 pypy
          - os: linux
            manylinux: auto
            target: i686
          - os: linux
            manylinux: auto
            target: aarch64
          - os: linux
            manylinux: auto
            target: armv7
            interpreter: 3.9 3.10 3.11 3.12 3.13
          - os: linux
            manylinux: auto
            target: ppc64le
            interpreter: 3.9 3.10 3.11 3.12 3.13
          - os: linux
            manylinux: auto
            target: s390x
            interpreter: 3.9 3.10 3.11 3.12 3.13
          - os: linux
            manylinux: auto
            target: x86_64
            interpreter: pypy3.9 pypy3.10 pypy3.11

          # musllinux
          - os: linux
            manylinux: musllinux_1_1
            target: x86_64
          - os: linux
            manylinux: musllinux_1_1
            target: aarch64
          - os: linux
            manylinux: musllinux_1_1
            target: armv7

          # macos;
          # all versions x86_64
          # arm pypy and older pythons which can't be run on the arm hardware for PGO
          - os: macos
            target: x86_64
          - os: macos
            target: aarch64
            interpreter: 3.9 pypy3.9 pypy3.10 pypy3.11

          # windows;
          # x86_64 pypy builds are not PGO optimized
          # i686 not supported by pypy
          # aarch64 only 3.11 and up, also not PGO optimized
          - os: windows
            target: x86_64
            interpreter: pypy3.9 pypy3.10 pypy3.11
          - os: windows
            target: i686
            python-architecture: x86
            interpreter: 3.9 3.10 3.11 3.12 3.13
          - os: windows
            target: aarch64
            interpreter: 3.11 3.12 3.13

        exclude:
          # See above; disabled for now.
          - os: windows
            target: aarch64
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: ${{ matrix.python-architecture || 'x64' }}
      - name: build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --out dist --interpreter ${{ matrix.interpreter || '3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10 pypy3.11' }}
          rust-toolchain: stable
          docker-options: -e CI

  build-docs:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: uv sync --all-extras
      - name: Run Tests
        run: make docs
