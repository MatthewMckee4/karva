[workspace]
members = ["crates/*"]
resolver = "2"

[workspace.package]
edition = "2024"
rust-version = "1.85"
homepage = "https://github.com/MatthewMckee4/karva"
documentation = "https://github.com/MatthewMckee4/karva"
repository = "https://github.com/MatthewMckee4/karva"
authors = ["Matthew McKee <matthewmckee4@gmail.com>"]
license = "MIT"

[workspace.dependencies]
karva_core = { path = "crates/karva_core" }
karva_cli = { path = "crates/karva_cli" }
karva = { path = "crates/karva" }
karva_benchmark = { path = "crates/karva_benchmark" }

anyhow = { version = "1.0.97" }
codspeed-criterion-compat = { version = "2.6.0", default-features = false }
criterion = { version = "0.6.0", default-features = false }
clap = { version = "4.5.35", features = ["derive", "wrap_help"] }
camino = { version = "1.1.7" }
chrono = { version = "0.4.35", default-features = false, features = ["clock"] }
serde = { version = "1.0.219", features = ["derive"] }
wild = { version = "2" }
colored = { version = "3.0.0" }
argfile = { version = "0.2.1" }
tracing = { version = "0.1.41", features = ["release_max_level_debug"] }
tracing-flame = { version = "0.2.0" }
tracing-indicatif = { version = "0.3.6" }
tracing-log = { version = "0.2.0" }
tracing-subscriber = { version = "0.3.18", default-features = false, features = [
    "env-filter",
    "fmt",
] }
tracing-tree = { version = "0.4.0" }
ruff_python_ast = { git = "https://github.com/astral-sh/ruff/", branch = "main" }
ruff_python_parser = { git = "https://github.com/astral-sh/ruff/", branch = "main" }
ruff_source_file = { git = "https://github.com/astral-sh/ruff/", branch = "main" }
ruff_text_size = { git = "https://github.com/astral-sh/ruff/", branch = "main" }
pyo3 = { version = "0.25.0", features = ["auto-initialize"] }
ignore = "0.4.23"


[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ["cfg(codspeed)"] }

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
# # Allowed pedantic lints
# char_lit_as_u8 = "allow"
# collapsible_else_if = "allow"
# collapsible_if = "allow"
# implicit_hasher = "allow"
# map_unwrap_or = "allow"
# match_same_arms = "allow"
# missing_errors_doc = "allow"
# missing_panics_doc = "allow"
# module_name_repetitions = "allow"
must_use_candidate = "allow"
# similar_names = "allow"
# single_match_else = "allow"
# too_many_lines = "allow"
# needless_continue = "allow"       # An explicit continue can be more readable, especially if the alternative is an empty block.
# unnecessary_debug_formatting = "allow"  # too many instances, the display also doesn't quote the path which is often desired in logs where we use them the most often.
# Without the hashes we run into a `rustfmt` bug in some snapshot tests, see #13250
# needless_raw_string_hashes = "allow"
# Disallowed restriction lints
print_stdout = "warn"
print_stderr = "warn"
dbg_macro = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
get_unwrap = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
rest_pat_in_fully_bound_structs = "warn"
# nursery rules
redundant_clone = "warn"
debug_assert_with_mut_call = "warn"
unused_peekable = "warn"

# Diagnostics are not actionable: Enable once https://github.com/rust-lang/rust-clippy/issues/13774 is resolved.
large_stack_arrays = "allow"
